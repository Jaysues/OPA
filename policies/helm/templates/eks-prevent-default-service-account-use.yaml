{{- if .Values.policies.preventDefaultServiceAccountUse.enabled }}
apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: eksrestrictdefaultserviceaccount
  annotations:
    description: "{{ .Values.policies.preventDefaultServiceAccountUse.annotations.description }}"
    standard: "{{ .Values.policies.preventDefaultServiceAccountUse.annotations.standard }}"
    shortName: "{{ .Values.policies.preventDefaultServiceAccountUse.annotations.shortName }}"
    app_id: "{{ .Values.global.annotations.app_id }}"
    risk_type: "{{ .Values.global.annotations.risk_type }}"
    risk_classification: "{{ .Values.global.annotations.risk_classification }}"
    snow_id: "{{ .Values.global.annotations.snow_id }}"
    exception_register: "{{ .Values.global.annotations.exception_register }}"
    exception_id: "{{ .Values.global.annotations.exception_id }}"
    exemption_reason: "{{ .Values.global.annotations.exemption_reason }}"
    exemption_tenant: "{{ .Values.global.annotations.exemption_tenant }}"
    exemption_infra_env: "{{ .Values.global.annotations.exemption_infra_env }}"
spec:
  crd:
    spec:
      names:
        kind: EksRestrictDefaultServiceAccount
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package eksrestrictdefaultserviceaccount

        violation[{"msg": msg}] {
          sa := input.review.object.spec.serviceAccountName
          sa == "default" or sa == ""
          msg := sprintf("Pod '%s' is using the default service account.", [input.review.object.metadata.name])
        }

---

apiVersion: constraints.gatekeeper.sh/v1beta1
kind: EksRestrictDefaultServiceAccount
metadata:
  name: prevent-default-service-account-use
  annotations:
    description: "{{ .Values.policies.preventDefaultServiceAccountUse.annotations.description }}"
    standard: "{{ .Values.policies.preventDefaultServiceAccountUse.annotations.standard }}"
    shortName: "{{ .Values.policies.preventDefaultServiceAccountUse.annotations.shortName }}"
    app_id: "{{ .Values.global.annotations.app_id }}"
    risk_type: "{{ .Values.global.annotations.risk_type }}"
    risk_classification: "{{ .Values.global.annotations.risk_classification }}"
    snow_id: "{{ .Values.global.annotations.snow_id }}"
    exception_register: "{{ .Values.global.annotations.exception_register }}"
    exception_id: "{{ .Values.global.annotations.exception_id }}"
    exemption_reason: "{{ .Values.global.annotations.exemption_reason }}"
    exemption_tenant: "{{ .Values.global.annotations.exemption_tenant }}"
    exemption_infra_env: "{{ .Values.global.annotations.exemption_infra_env }}"
spec:
  enforcementAction: {{ if eq .Values.infra_env "dev" }}"dryrun"{{ else }}"deny"{{ end }}
  match:
    excludedNamespaces:
      - kube-system
      - amazon-cloudwatch
      - gatekeeper-system
      - amazon-guardduty
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
{{- end }}
